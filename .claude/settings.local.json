{
  "permissions": {
    "allow": [
      "Bash(php:*)",
      "Bash(find:*)",
      "Bash(mysql:*)",
      "Read(c:\\MAMP\\htdocs\\Bull_PVP\\admin/**)",
      "Bash(\"C:\\MAMP\\bin\\php\\php8.1.0\\php.exe\" scripts/update_event_status.php)",
      "Read(C:\\MAMP\\bin\\php/**)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" scripts/update_event_status.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" scripts/update_event_status.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -l admin/event_details.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" update_schema_paused.php)",
      "Bash(rm:*)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" migrate_to_audit_chain.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" test_audit_chain.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" test_audit_chain_standalone.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" migrate_to_audit_chain.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" verify_migration.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\necho ''Clearing audit transactions...\\n'';\n$conn->exec(''DELETE FROM audit_transactions'');\necho ''Done.\\n'';\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -l audit_chain_explorer.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -f audit_chain_explorer.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\necho ''Updating audit_transactions table with new transaction types...\\n'';\n$conn->exec(''ALTER TABLE audit_transactions MODIFY transaction_type ENUM(\n    \"\"deposit\"\", \"\"withdrawal\"\", \"\"transfer\"\", \"\"bet_place\"\", \"\"bet_match\"\", \"\"bet_win\"\", \"\"bet_loss\"\", \"\"bet_refund\"\", \"\"platform_fee\"\",\n    \"\"user_register\"\", \"\"user_login\"\", \"\"user_logout\"\", \"\"user_update\"\", \"\"user_delete\"\",\n    \"\"event_create\"\", \"\"event_update\"\", \"\"event_start\"\", \"\"event_complete\"\", \"\"event_cancel\"\", \"\"event_status_change\"\",\n    \"\"competitor_create\"\", \"\"competitor_update\"\", \"\"competitor_delete\"\",\n    \"\"vote_submit\"\", \"\"vote_change\"\", \"\"voting_open\"\", \"\"voting_close\"\",\n    \"\"admin_action\"\", \"\"system_config\"\", \"\"file_upload\"\", \"\"security_alert\"\"\n) NOT NULL'');\necho ''Done!\\n'';\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" test_comprehensive_audit.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\necho ''Checking bets table structure...\\n'';\n$stmt = $conn->query(''DESCRIBE bets'');\n$columns = $stmt->fetchAll();\nforeach($columns as $col) {\n    echo $col[''Field''] . '' - '' . $col[''Type''] . ''\\n'';\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\necho ''Updating bets table structure...\\n'';\n$conn->exec(''ALTER TABLE bets CHANGE blockchain_transaction_hash transaction_hash VARCHAR(64)'');\necho ''Renamed blockchain_transaction_hash to transaction_hash\\n'';\n$conn->exec(''ALTER TABLE bets CHANGE matched_transaction_hash match_transaction_hash VARCHAR(64)'');\necho ''Renamed matched_transaction_hash to match_transaction_hash\\n'';\necho ''Done!\\n'';\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\necho ''Verifying updated bets table structure...\\n'';\n$stmt = $conn->query(''DESCRIBE bets'');\n$columns = $stmt->fetchAll();\nforeach($columns as $col) {\n    if(strpos($col[''Field''], ''transaction'') !== false) {\n        echo ''✓ '' . $col[''Field''] . '' - '' . $col[''Type''] . ''\\n'';\n    }\n}\necho ''Done!\\n'';\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -l api/place_bet.php)",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\n\necho ''Checking user balances in both systems...\\n\\n'';\n\necho ''=== WALLETS TABLE ===\\n'';\n$stmt = $conn->query(''SELECT user_id, balance FROM wallets WHERE balance > 0 ORDER BY user_id'');\n$wallets = $stmt->fetchAll();\nforeach($wallets as $wallet) {\n    echo ''User '' . $wallet[''user_id''] . '': $'' . number_format($wallet[''balance''], 2) . ''\\n'';\n}\n\necho ''\\n=== AUDIT CHAIN BALANCES ===\\n'';\n$stmt = $conn->query(''SELECT user_id, balance FROM user_balances WHERE balance > 0 ORDER BY user_id'');\n$audit_balances = $stmt->fetchAll();\nforeach($audit_balances as $balance) {\n    echo ''User '' . $balance[''user_id''] . '': $'' . number_format($balance[''balance''], 2) . ''\\n'';\n}\n\necho ''\\n=== USERS WITH WALLETS BUT NO AUDIT BALANCES ===\\n'';\n$stmt = $conn->query(''\n    SELECT w.user_id, w.balance, u.username \n    FROM wallets w \n    LEFT JOIN user_balances ub ON w.user_id = ub.user_id \n    LEFT JOIN users u ON w.user_id = u.id \n    WHERE w.balance > 0 AND ub.user_id IS NULL\n'');\n$missing = $stmt->fetchAll();\nforeach($missing as $user) {\n    echo ''User '' . $user[''user_id''] . '' ('' . $user[''username''] . ''): $'' . number_format($user[''balance''], 2) . '' - NEEDS MIGRATION\\n'';\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\nrequire_once ''config/AuditChain.php'';\n$db = new Database();\n$conn = $db->connect();\n$auditChain = new AuditChain();\n\necho ''Migrating missing wallet balances to audit chain...\\n'';\n\n// Get users with wallet balances but no audit chain balances\n$stmt = $conn->query(''\n    SELECT w.user_id, w.balance, u.username \n    FROM wallets w \n    LEFT JOIN user_balances ub ON w.user_id = ub.user_id \n    LEFT JOIN users u ON w.user_id = u.id \n    WHERE w.balance > 0 AND ub.user_id IS NULL\n'');\n$missing_users = $stmt->fetchAll();\n\nforeach($missing_users as $user) {\n    // Create user balance record\n    $stmt = $conn->prepare(''INSERT INTO user_balances (user_id, balance) VALUES (?, ?)'');\n    $stmt->execute([$user[''user_id''], $user[''balance'']]);\n    \n    // Create migration audit log\n    $auditChain->createTransaction(null, $user[''user_id''], $user[''balance''], ''deposit'', [\n        ''migration'' => true,\n        ''source'' => ''wallet_table'',\n        ''username'' => $user[''username''],\n        ''migrated_amount'' => $user[''balance'']\n    ]);\n    \n    echo ''✓ Migrated User '' . $user[''user_id''] . '' ('' . $user[''username''] . ''): $'' . number_format($user[''balance''], 2) . ''\\n'';\n}\n\n// Also sync any balances that differ\n$stmt = $conn->query(''\n    SELECT w.user_id, w.balance as wallet_balance, ub.balance as audit_balance, u.username\n    FROM wallets w \n    JOIN user_balances ub ON w.user_id = ub.user_id \n    LEFT JOIN users u ON w.user_id = u.id \n    WHERE w.balance != ub.balance AND w.balance > ub.balance\n'');\n$different_balances = $stmt->fetchAll();\n\nforeach($different_balances as $user) {\n    $difference = $user[''wallet_balance''] - $user[''audit_balance''];\n    \n    // Update audit chain balance to match wallet\n    $stmt = $conn->prepare(''UPDATE user_balances SET balance = ? WHERE user_id = ?'');\n    $stmt->execute([$user[''wallet_balance''], $user[''user_id'']]);\n    \n    // Log the balance correction\n    $auditChain->createTransaction(null, $user[''user_id''], $difference, ''deposit'', [\n        ''balance_correction'' => true,\n        ''old_balance'' => $user[''audit_balance''],\n        ''new_balance'' => $user[''wallet_balance''],\n        ''difference'' => $difference,\n        ''username'' => $user[''username'']\n    ]);\n    \n    echo ''✓ Corrected User '' . $user[''user_id''] . '' ('' . $user[''username''] . ''): $'' . number_format($user[''audit_balance''], 2) . '' → $'' . number_format($user[''wallet_balance''], 2) . ''\\n'';\n}\n\necho ''Migration completed!\\n'';\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\nrequire_once ''config/AuditChain.php'';\n$db = new Database();\n$conn = $db->connect();\n$auditChain = new AuditChain();\n\necho ''Verifying all user balances...\\n\\n'';\n\n$stmt = $conn->query(''\n    SELECT w.user_id, w.balance as wallet_balance, ub.balance as audit_balance, u.username\n    FROM wallets w \n    JOIN user_balances ub ON w.user_id = ub.user_id \n    LEFT JOIN users u ON w.user_id = u.id \n    WHERE w.balance > 0\n    ORDER BY w.user_id\n'');\n$all_balances = $stmt->fetchAll();\n\nforeach($all_balances as $user) {\n    $status = ($user[''wallet_balance''] == $user[''audit_balance'']) ? ''✓'' : ''❌'';\n    echo $status . '' User '' . $user[''user_id''] . '' ('' . $user[''username''] . ''): Wallet=$'' . number_format($user[''wallet_balance''], 2) . '' | Audit=$'' . number_format($user[''audit_balance''], 2) . ''\\n'';\n}\n\necho ''\\n=== Testing audit chain balance function ===\\n'';\n// Test the getUserBalance function specifically\nforeach($all_balances as $user) {\n    $audit_balance = $auditChain->getUserBalance($user[''user_id'']);\n    echo ''User '' . $user[''user_id''] . '' audit balance via AuditChain::getUserBalance(): $'' . number_format($audit_balance, 2) . ''\\n'';\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\n\necho ''Verifying user balances after migration...\\n'';\n\n$stmt = $conn->query(''SELECT user_id, balance FROM user_balances WHERE user_id = 7'');\n$result = $stmt->fetch();\nif($result) {\n    echo ''User 7 audit chain balance: $'' . number_format($result[''balance''], 2) . ''\\n'';\n} else {\n    echo ''User 7 not found in audit chain balances\\n'';\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\n\necho ''Fixing User 7 balance...\\n'';\n\n// Check if user 7 exists in user_balances\n$stmt = $conn->prepare(''SELECT user_id, balance FROM user_balances WHERE user_id = 7'');\n$stmt->execute();\n$existing = $stmt->fetch();\n\nif ($existing) {\n    echo ''User 7 exists with balance: $'' . $existing[''balance''] . ''\\n'';\n    // Update the balance\n    $stmt = $conn->prepare(''UPDATE user_balances SET balance = 50.00 WHERE user_id = 7'');\n    $stmt->execute();\n    echo ''✓ Updated User 7 balance to $50.00\\n'';\n} else {\n    echo ''User 7 does not exist in user_balances, inserting...\\n'';\n    $stmt = $conn->prepare(''INSERT INTO user_balances (user_id, balance) VALUES (7, 50.00)'');\n    $stmt->execute();\n    echo ''✓ Inserted User 7 with balance $50.00\\n'';\n}\n\n// Verify the fix\n$stmt = $conn->prepare(''SELECT balance FROM user_balances WHERE user_id = 7'');\n$stmt->execute();\n$result = $stmt->fetch();\necho ''Final User 7 balance: $'' . number_format($result[''balance''], 2) . ''\\n'';\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\n\necho ''Comprehensive balance synchronization...\\n\\n'';\n\n// Get all wallets with positive balances\n$stmt = $conn->query(''SELECT w.user_id, w.balance, u.username FROM wallets w LEFT JOIN users u ON w.user_id = u.id WHERE w.balance > 0'');\n$wallet_users = $stmt->fetchAll();\n\nforeach($wallet_users as $user) {\n    // Check if user exists in audit chain balances\n    $stmt = $conn->prepare(''SELECT balance FROM user_balances WHERE user_id = ?'');\n    $stmt->execute([$user[''user_id'']]);\n    $audit_balance = $stmt->fetch();\n    \n    if (!$audit_balance) {\n        // Insert missing user\n        $stmt = $conn->prepare(''INSERT INTO user_balances (user_id, balance) VALUES (?, ?)'');\n        $stmt->execute([$user[''user_id''], $user[''balance'']]);\n        echo ''✓ Added User '' . $user[''user_id''] . '' ('' . ($user[''username''] ?? ''Unknown'') . ''): $'' . number_format($user[''balance''], 2) . ''\\n'';\n    } else if ($audit_balance[''balance''] != $user[''balance'']) {\n        // Update mismatched balance to match wallet\n        $stmt = $conn->prepare(''UPDATE user_balances SET balance = ? WHERE user_id = ?'');\n        $stmt->execute([$user[''balance''], $user[''user_id'']]);\n        echo ''✓ Synced User '' . $user[''user_id''] . '' ('' . ($user[''username''] ?? ''Unknown'') . ''): $'' . number_format($audit_balance[''balance''], 2) . '' → $'' . number_format($user[''balance''], 2) . ''\\n'';\n    } else {\n        echo ''✓ User '' . $user[''user_id''] . '' ('' . ($user[''username''] ?? ''Unknown'') . ''): $'' . number_format($user[''balance''], 2) . '' - Already synced\\n'';\n    }\n}\n\necho ''\\n=== FINAL VERIFICATION ===\\n'';\n$stmt = $conn->query(''SELECT user_id, balance FROM user_balances WHERE balance > 0 ORDER BY user_id'');\n$final_balances = $stmt->fetchAll();\nforeach($final_balances as $balance) {\n    echo ''User '' . $balance[''user_id''] . '': $'' . number_format($balance[''balance''], 2) . ''\\n'';\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/AuditChain.php'';\n$auditChain = new AuditChain();\n\necho ''Testing AuditChain getUserBalance function...\\n'';\n\n// Test specific users\n$test_users = [1, 2, 7, 8, 9];\nforeach($test_users as $user_id) {\n    $balance = $auditChain->getUserBalance($user_id);\n    echo ''User '' . $user_id . '': $'' . number_format($balance, 2) . ''\\n'';\n}\n\necho ''\\nTesting balance validation (should pass for User 7 with $50 balance)...\\n'';\n$user7_balance = $auditChain->getUserBalance(7);\nif ($user7_balance >= 10) {\n    echo ''✓ User 7 can place a $10 bet (balance: $'' . number_format($user7_balance, 2) . '')\\n'';\n} else {\n    echo ''❌ User 7 cannot place a $10 bet (balance: $'' . number_format($user7_balance, 2) . '')\\n'';\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" -r \"\nrequire_once ''config/database.php'';\n$db = new Database();\n$conn = $db->connect();\n\necho ''Checking events and their status...\\n'';\n$stmt = $conn->query(''SELECT id, name, status, competitor_a, competitor_b, created_at FROM events ORDER BY created_at DESC'');\n$events = $stmt->fetchAll();\n\nif (count($events) == 0) {\n    echo ''No events found in database.\\n'';\n} else {\n    foreach($events as $event) {\n        echo ''Event ID: '' . $event[''id''] . ''\\n'';\n        echo ''  Name: '' . $event[''name''] . ''\\n'';\n        echo ''  Status: '' . $event[''status''] . ''\\n'';\n        echo ''  Competitors: '' . $event[''competitor_a''] . '' vs '' . $event[''competitor_b''] . ''\\n'';\n        echo ''  Created: '' . $event[''created_at''] . ''\\n\\n'';\n    }\n}\n\")",
      "Bash(\"C:\\MAMP\\bin\\php\\php7.4.1\\php.exe\" -c \"C:\\MAMP\\conf\\php7.4.1\\php.ini\" test_balance_debug.php)"
    ],
    "deny": [],
    "ask": []
  }
}